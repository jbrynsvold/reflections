What happens when you initialize a repository? Why do you need to do it?

It creates a .git file, which will allow you to see a list of commits in the repository later, among other things.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area shows what will be commited when a commit is run.

A working directory is just the directory in which you are currently doing things.

The repository is the directory that includes a .git directory? That .git directory has a bunch of meta data in it, tracking changes.

How can you use the staging area to make sure you have one commit per logical change?

The staging area can be compared to the last commit and you can see what changes were made. You can check that the change is logical and separate.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

I think branches could be helpful when trying something new, not wanting to screw up what already works, etc.

How do the diagrams help you visualize the branch structure?

It helps me visualize which commits cannot be reached via git log and it helps me see which commits can be reached by what route.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Their code is merged, getting rid of code that was deleted by either branch, and adding code that was added by either branch.

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?

A pro would be that it goes faster and you don't have to do it all by hand. A con is that it doesn't always work on the first try.